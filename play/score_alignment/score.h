#ifndef _SCORE_H
#define _SCORE_H

#include <vector>
using namespace std;

// To decrease the score of base pair substitutions which do not belong to

#define BASE_PAIR_COEFF 0.8
#define GAP_INSTEM 5
#define GAP_OUTSTEM 2

#define PAIR_PLUS 0
#define INSTEM_DEL_OPEN 20
#define INSTEM_INS_OPEN 20
#define OUTSTEM_DEL_OPEN 10
#define OUTSTEM_INS_OPEN 10


/*
#define BASE_PAIR_COEFF 1
#define PAIR_PLUS -1
#define GAP_INSTEM 10
#define GAP_OUTSTEM 10
#define INSTEM_DEL_OPEN 10
#define INSTEM_INS_OPEN 10
#define OUTSTEM_DEL_OPEN 10
#define OUTSTEM_INS_OPEN 10


const double baseScore[4][4] = {
// *A		*C		*G		*U		
   -1 ,  1,    1,    1,	 //A*
    1,  -1,    1,    1,	 //C*
    1,   1,   -1,    1,	 //G*
    1,   1,    1,   -1   //U*
		};
const double basePairScore[4][4][4][4] = {
//   AA    AC    AG    AU     CA    CC    CG     CU      GA   GC    GG   GU      UA     UC    UG    UU
 {
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}},  //AA
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}},  //AC
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}},  //AG
  {{100,  100,  100,   -1}, {100,  100,   -1,   100},  {100,  -1,  100,  -1}, {  -1,   100,   -1,  100}}   //AU
 },{  
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}},  //CA
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}},  //CC
  {{100,  100,  100,   -1}, {100,  100,   -1,   100},  {100,  -1,  100,  -1}, {  -1,   100,   -1,  100}},  //CG
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}}   //CU
 },{  
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}}, //GA
  {{100,  100,  100,   -1}, {100,  100,   -1,   100},  {100,  -1,  100,  -1}, {  -1,   100,   -1,  100}}, //GC
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}}, //GG
  {{100,  100,  100,   -1}, {100,  100,   -1,   100},  {100,  -1,  100,  -1}, {  -1,   100,   -1,  100}}  //GU
 },{  
  {{100,  100,  100,   -1}, {100,  100,   -1,   100},  {100,  -1,  100,  -1}, {  -1,   100,   -1,  100}}, //UA
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}}, //UC
  {{100,  100,  100,   -1}, {100,  100,   -1,   100},  {100,  -1,  100,  -1}, {  -1,   100,   -1,  100}}, //UG
  {{100,  100,  100,  100}, {100,  100,  100,   100},  {100, 100,  100, 100}, { 100,   100,  100,  100}}  //UU
 }
};
*/

const double baseScore[4][4] = {
// *A		   *C		  *G		 *U		
 {-2.22,  1.86,  1.46,  1.39},	 //A*
 { 1.86, -1.16,  2.48,  1.05},	 //C*
 { 1.46,  2.48, -1.03,  1.74},	 //G*
 { 1.39,  1.05,  1.74, -1.65}    //U*
};
		
const double basePairScore[4][4][4][4] = {
//    AA     AC     AG      AU      CA     CC     CG       CU       GA     GC    GG      GU      UA      UC    UG     UU
 {
  {{ 2.49,  7.04,  8.24,  4.32}, { 8.84, 14.37,  4.68,  12.64},  { 6.86,  5.03,  8.39,  5.84}, { 4.01, 11.32, 6.16,  9.05}},  //AA
  {{ 7.04,  2.11,  8.89,  2.04}, { 9.37,  9.08,  5.86,  10.45},  { 9.73,  3.81, 11.05,  4.72}, { 5.33,  8.67, 6.93,  7.83}},  //AC
  {{ 8.24,  8.89,  0.80,  5.13}, {10.41, 14.53,  4.57,  10.14},  { 8.61,  5.77,  5.38,  6.60}, { 5.43,  8.87, 5.94, 11.07}},  //AG
  {{ 4.32,  2.04,  5.13, -4.49}, { 5.56,  6.71, -1.67,   5.17},  { 5.33, -2.70,  5.61, -0.59}, {-1.61,  4.81, 0.51,  2.98}}   //AU
 },{  
  {{ 8.84,  9.37, 10.41,  5.56}, { 5.13, 10.45,  3.57,   8.49},  { 7.98,  5.95, 11.36,  7.93}, { 2.42,  7.08, 5.63,  8.39}},  //CA
  {{14.37,  9.08, 14.53,  6.71}, {10.45,  3.59,  5.71,   5.77},  {12.43,  3.70, 12.58,  7.88}, { 6.88,  7.40, 8.41,  5.41}},  //CC
  {{ 4.68,  5.86,  4.57, -1.67}, { 3.57,  5.71, -5.36,   4.96},  { 6.00, -2.11,  4.66,  0.27}, {-2.75,  4.91,-1.32,  3.67}},  //CG
  {{12.64, 10.45, 10.14,  5.17}, { 8.49,  5.77,  4.96,   2.28},  { 7.71,  5.84, 13.69,  5.61}, { 4.72,  3.83, 7.36,  5.21}}   //CU
 },{  
  {{ 6.86,  9.73,  8.61,  5.33}, { 7.98, 12.43,  6.00,   7.71},  { 1.05,  4.88,  8.67,  6.10}, { 5.85,  6.63, 7.55, 11.54}},  //GA
  {{ 5.03,  3.81,  5.77, -2.70}, { 5.95,  3.70, -2.11,   5.84},  { 4.88, -5.62,  4.13, -1.21}, {-1.60,  4.49, 0.08,  3.90}},  //GC
  {{ 8.39, 11.05,  5.38,  5.61}, {11.36, 12.58,  4.66,  13.69},  { 8.67,  4.13,  1.98,  5.77}, { 5.75, 12.01, 4.27, 10.79}},  //GG
  {{ 5.84,  4.72,  6.60, -0.59}, { 7.93,  7.88,  0.27,   5.61},  { 6.10, -1.21,  5.77, -3.47}, { 0.57,  5.30, 2.09,  4.45}}   //GU
 },{  
  {{ 4.01,  5.33,  5.43, -1.61}, { 2.42,  6.88, -2.75,   4.72},  { 5.85, -1.60,  5.75,  0.57}, {-4.97,  2.98,-1.14,  3.39}},  //UA
  {{11.32,  8.67,  8.87,  4.81}, { 7.08,  7.40,  4.91,   3.83},  { 6.63,  4.49, 12.01,  5.30}, { 2.98,  3.21, 4.76,  5.97}},  //UC
  {{ 6.16,  6.93,  5.94,  0.51}, { 5.63,  8.41, -1.32,   7.36},  { 7.55,  0.08,  4.27,  2.09}, {-1.14,  4.76,-3.36,  4.28}},  //UG
  {{ 9.05,  7.83, 11.07,  2.98}, { 8.39,  5.41,  3.67,   5.21},  {11.54,  3.90, 10.79,  4.45}, { 3.39,  5.97, 4.28,  0.02}}   //UU
 }
};

const double basePairPlus[4][4][4][4] = {
//   AA    AC    AG    AU     CA    CC    CG     CU      GA   GC    GG   GU      UA     UC    UG    UU
 {
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}, //AA
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}, //AC
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}, //AG
  {{  0,    0,    0,    1}, {  0,    0,    1,     0},  {  0,   1,    0,   1}, {   1,     0,    1,    0}}  //AU
 },{  
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}, //CA
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}, //CC
  {{  0,    0,    0,    1}, {  0,    0,    1,     0},  {  0,   1,    0,   1}, {   1,     0,    1,    0}}, //CG
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}  //CU
 },{  
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}, //GA
  {{  0,    0,    0,    1}, {  0,    0,    1,     0},  {  0,   1,    0,   1}, {   1,     0,    1,    0}}, //GC
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}, //GG
  {{  0,    0,    0,    1}, {  0,    0,    1,     0},  {  0,   1,    0,   1}, {   1,     0,    1,    0}}  //GU
 },{  
  {{  0,    0,    0,    1}, {  0,    0,    1,     0},  {  0,   1,    0,   1}, {   1,     0,    1,    0}}, //UA
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}, //UC
  {{  0,    0,    0,    1}, {  0,    0,    1,     0},  {  0,   1,    0,   1}, {   1,     0,    1,    0}}, //UG
  {{  0,    0,    0,    0}, {  0,    0,    0,     0},  {  0,   0,    0,   0}, {   0,     0,    0,    0}}  //UU
 }
};

#endif 
